@model CcsData.ViewModels.App1



<article id="app1">
    @using (Ajax.BeginForm("App1", "Applications4", null, new AjaxOptions { HttpMethod = "post", InsertionMode = InsertionMode.Replace, UpdateTargetId = "app", OnBegin = "appBegin", OnSuccess = "app1Success", LoadingElementId = "waiting", LoadingElementDuration = 600 }, new { @class = "form-horizontal bigForm" }))
    {

        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LoanTypeRequested, htmlAttributes: new { @class = "col-sm-4 control-label" })
            <div class="col-md-8">
                <div class="col-sm-6">
                    @Html.EnumDropDownListFor(model => model.LoanTypeRequested, "Select", new { @class = "form-control input-lg", onchange = "LoanTypeChanged2()" })
                    <div class="col-sm-12">
                        @Html.ValidationMessageFor(model => model.LoanTypeRequested, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UsState, htmlAttributes: new { @class = "col-sm-4 control-label" })
        <div class="col-md-8">
            <div class="col-sm-6">
                @Html.EnumDropDownListFor(model => model.UsState, "Select", new { @class = "form-control input-lg", onchange = "OnCountyChanged()"})
                <div class="col-sm-12">
                    @Html.ValidationMessageFor(model => model.UsState, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CountyFips, htmlAttributes: new { @class = "col-sm-4 control-label" })
        <div class="col-md-8">
            <div class="col-sm-6">
                <select id="CountyFips" name="CountyFips" class="form-control input-lg">


                    @if (Model != null && Model.CountyFips != null && Model.CountyFips != 0)
                    {
                        <option selected="selected" value=@Model.CountyFips>Select</option>
                    }
                    else
                    {
                        <option selected="selected" value="0">Select</option>
                    }

                </select>

                <div class="col-sm-12">
                    @Html.ValidationMessageFor(model => model.CountyFips, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

        <div id="CashoutId" style="display:none" class="form-group">
            @Html.LabelFor(model => model.CashOutRequested, htmlAttributes: new { @class = " col-sm-4 control-label" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CashOutRequested, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-sm-12">
                    @Html.ValidationMessageFor(model => model.CashOutRequested, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="realtorId" class="form-group" style="display:none">
            @Html.LabelFor(model => model.RealtorID, "Realtor", htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                <div class="col-sm-6">
                    @Html.DropDownList("RealtorID", null,"Select", htmlAttributes: new { @class = "form-control input-lg" })
                    <div class="col-sm-12">
                        @Html.ValidationMessageFor(model => model.RealtorID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OwnerShipType, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.OwnerShipType, new { @class = "form-control input-lg" })
                <div class="col-sm-12">
                    @Html.ValidationMessageFor(model => model.OwnerShipType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PropertyType, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PropertyType, new { @class = "form-control input-lg" })
                <div class="col-sm-12">
                    @Html.ValidationMessageFor(model => model.PropertyType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="estimatedDebtToPayId" style="display:none" class="form-group">
            @Html.LabelFor(model => model.EstimateTotalDebtToPayOff, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EstimateTotalDebtToPayOff, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-sm-12">
                    @Html.ValidationMessageFor(model => model.EstimateTotalDebtToPayOff, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="totalPmttopayOffId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.TotalOfMonthlyPaymentsOnDebtToPayOff, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.TotalOfMonthlyPaymentsOnDebtToPayOff, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-sm-12">
                    @Html.ValidationMessageFor(model => model.TotalOfMonthlyPaymentsOnDebtToPayOff, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="additionalCashOutId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.AdditionalCashOutRequested, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AdditionalCashOutRequested, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-sm-12">
                    @Html.ValidationMessageFor(model => model.AdditionalCashOutRequested, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="purshasePriceId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-sm-12">
                    @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="downPaymentId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.DownPaymentAmount, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.DownPaymentAmount, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-8">
                    @Html.ValidationMessageFor(model => model.DownPaymentAmount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div id="SellerPaidColsingCostId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.SellerPaidCreditClosingCost, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SellerPaidCreditClosingCost, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-8">
                    @Html.ValidationMessageFor(model => model.SellerPaidCreditClosingCost, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="estimatedHoaId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.EstimatedHomeownersAssociationFeesAnnual, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EstimatedHomeownersAssociationFeesAnnual, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-sm-12">
                    @Html.ValidationMessageFor(model => model.EstimatedHomeownersAssociationFeesAnnual, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-4 col-sm-8">
                <div class="col-sm-6">
                    <input id="nextbtn" type="submit" name="BtnNext" value="Next" class="btn btn-lg btn-primary" />
                    @*<button id="nextbtn" type="submit" name="BtnNext" class="btn btn-primary btn-lg">Next <i class="fa fa-angle-double-right"></i></button>*@

                </div>
            </div>
        </div>


    }
</article>
