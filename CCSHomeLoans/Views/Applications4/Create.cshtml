@model CcsData.Models.Application

@{
    ViewBag.Title = "Mortgage Application";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}



@using (Html.BeginForm("Create", "Applications4", FormMethod.Post, new { @class = "form-horizontal bigForm" }))
{
    @Html.AntiForgeryToken()

    <article id="app1">
        <h2 class="subtitle">For Consumers by Consumers</h2>
        <div class="progress">
            <div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100" style="width: 30%"></div>
        </div>

        <span class="apply_percent_info pull-left">Progress</span>
        <span class="apply_percent_info pull-right">30%</span>

        <div class="spacer"><!-- 60px spacer --></div>
        <hr />
        @*@{
           HtmlString s = Html.ValidationSummary(false, "", new { @class = "text-danger" });
        }*@

        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LoanTypeRequested, htmlAttributes: new { @class = "col-sm-4 control-label" })
            <div class="col-md-8">
                <div class="col-sm-6">
                    @Html.EnumDropDownListFor(model => model.LoanTypeRequested, new { @class = "form-control input-lg", onchange = "LoanTypeChanged2()" })
                    @Html.ValidationMessageFor(model => model.LoanTypeRequested, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="CashoutId" style="display:none" class="form-group">
            @Html.LabelFor(model => model.CashOutRequested, htmlAttributes: new { @class = " col-sm-4 control-label" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CashOutRequested, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CashOutRequested, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="realtorId" class="form-group" style="display:none">
            @Html.LabelFor(model => model.RealtorID, "Realtor", htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                <div class="col-sm-6">
                    @Html.DropDownList("RealtorID", null, htmlAttributes: new { @class = "form-control input-lg" })
                    @Html.ValidationMessageFor(model => model.RealtorID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OwnerShipType, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.OwnerShipType, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.OwnerShipType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PropertyType, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PropertyType, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.PropertyType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="estimatedDebtToPayId" style="display:none" class="form-group">
            @Html.LabelFor(model => model.EstimateTotalDebtToPayOff, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EstimateTotalDebtToPayOff, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstimateTotalDebtToPayOff, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="totalPmttopayOffId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.TotalOfMonthlyPaymentsOnDebtToPayOff, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.TotalOfMonthlyPaymentsOnDebtToPayOff, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalOfMonthlyPaymentsOnDebtToPayOff, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="additionalCashOutId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.AdditionalCashOutRequested, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AdditionalCashOutRequested, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdditionalCashOutRequested, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="purshasePriceId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="downPaymentId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.DownPaymentAmount, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.DownPaymentAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DownPaymentAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="estimatedHoaId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.EstimatedHomeownersAssociationFeesAnnual, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EstimatedHomeownersAssociationFeesAnnual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstimatedHomeownersAssociationFeesAnnual, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-sm-offset-4 col-sm-8">
                <div class="col-sm-6">
                    <button type="button" class="btn btn-primary btn-lg" onclick="App1Click()">Next <i class="fa fa-angle-double-right"></i></button>
                </div>
            </div>
        </div>
    </article>

    <article id="app2" style="display: none">
        <h2 class="subtitle">For Consumers by Consumers</h2>

        <div class="progress">
            <div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width: 50%"></div>
        </div>

        <span class="apply_percent_info pull-left">Progress</span>
        <span class="apply_percent_info pull-right">50%</span>

        <div class="spacer"><!-- 60px spacer --></div>

        <div class="form-group">
            @Html.LabelFor(model => model.OwnerShipLongevity, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.OwnerShipLongevity, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.OwnerShipLongevity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreditScoreEstimate, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CreditScoreEstimate, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.CreditScoreEstimate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DaysLate, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.DaysLate, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.DaysLate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="filedBankruptcyId" class="form-group">
            @Html.LabelFor(model => model.FiledBankruptcyType, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                <div class="col-sm-6">
                    @Html.EnumDropDownListFor(model => model.FiledBankruptcyType, new { @class = "form-control input-lg", onchange = "FiledBankruptcy()" })
                    @Html.ValidationMessageFor(model => model.FiledBankruptcyType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="dateOfbankruptcyId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.BankruptcyDischargeDate, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.BankruptcyDischargeDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankruptcyDischargeDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="Chapter13Id" style="display: none" class="form-group">
            @Html.LabelFor(model => model.Chapter13FilingDate, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Chapter13FilingDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Chapter13FilingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ForeclosuresShortSaleDeedinLieu, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                <div class="col-sm-6">
                    @Html.EnumDropDownListFor(model => model.ForeclosuresShortSaleDeedinLieu, new { @class = "form-control input-lg", onchange = "AnyForeclosures()" })
                    @Html.ValidationMessageFor(model => model.ForeclosuresShortSaleDeedinLieu, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="dateofForeclosureId" style="display: none" class="form-group">
            @Html.LabelFor(model => model.ForeclosureShortSaleDeedinLieuDate, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ForeclosureShortSaleDeedinLieuDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ForeclosureShortSaleDeedinLieuDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrossAnnualIncome, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.GrossAnnualIncome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GrossAnnualIncome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalMontlyPayments, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.TotalMontlyPayments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalMontlyPayments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RuralProperty, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.RuralProperty, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.RuralProperty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Veteran, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Veteran, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.Veteran, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-sm-offset-4 col-sm-8">
                <div class="col-sm-6">
                    <button type="button" class="btn btn-default btn-lg" onclick="Back2Click()"><i class="fa fa-angle-double-left"></i> BACK</button>
                    <button type="button" class="btn btn-primary btn-lg" onclick="App2Click()">Next <i class="fa fa-angle-double-right"></i></button>
                </div>
            </div>
        </div>

    </article>

    <article id="app3" style="display:none">
        <h2 class="subtitle">For Consumers by Consumers</h2>

        <div class="progress">
            <div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" style="width: 70%"></div>
        </div>
        <span class="apply_percent_info pull-left">Progress</span>
        <span class="apply_percent_info pull-right">70%</span>

        <div class="spacer"><!-- 60px spacer --></div>
        <div class="form-group">
            @Html.LabelFor(model => model.EstimatedHomeValue, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EstimatedHomeValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstimatedHomeValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstMortgageBalance, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FirstMortgageBalance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstMortgageBalance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentInterestRate, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CurrentInterestRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentInterestRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterestRateType, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.InterestRateType, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.InterestRateType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoanType, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LoanType, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.LoanType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MortgageTerm, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.MortgageTerm, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.MortgageTerm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Have2ndMortgage, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                <div class="col-sm-6">
                    @Html.EnumDropDownListFor(model => model.Have2ndMortgage, new { @class = "form-control input-lg", onchange = "SecondMortgageChanged()" })
                    @Html.ValidationMessageFor(model => model.Have2ndMortgage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="payOff2ndId" style="display:none" class="form-group">
            @Html.LabelFor(model => model.PayOff2ndMortgage, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PayOff2ndMortgage, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.PayOff2ndMortgage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="secondMgBalId" style="display:none" class="form-group">
            @Html.LabelFor(model => model.SecondMortgageBalance, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SecondMortgageBalance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecondMortgageBalance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="secondMgInterestId" style="display:none" class="form-group">
            @Html.LabelFor(model => model.SecondMortgageInterestRate, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SecondMortgageInterestRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecondMortgageInterestRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="secondmgTypeId" style="display:none" class="form-group">
            @Html.LabelFor(model => model.SecondMortgageRateType, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SecondMortgageRateType, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.SecondMortgageRateType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="secondMgTermId" style="display:none" class="form-group">
            @Html.LabelFor(model => model.SecondMortgageTerm, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SecondMortgageTerm, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(model => model.SecondMortgageTerm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="secondMgPymtId" style="display:none" class="form-group">
            @Html.LabelFor(model => model.SecondMortgagePayment, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SecondMortgagePayment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecondMortgagePayment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-4 col-sm-8">
                <div class="col-sm-6">
                    <button type="button" class="btn btn-default btn-lg" onclick="Back3Click()"><i class="fa fa-angle-double-left"></i> BACK</button>
                    <button type="button" class="btn btn-primary btn-lg" onclick="App3Click()">Next <i class="fa fa-angle-double-right"></i></button>
                </div>
            </div>
        </div>

    </article>

    <article id="app4" style="display:none">
        <h2 class="subtitle">For Consumers by Consumers</h2>

        <div class="progress">
            <div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100" style="width: 90%"></div>
        </div>
        <span class="apply_percent_info pull-left">Progress</span>
        <span class="apply_percent_info pull-right">90%</span>

        <div class="spacer"><!-- 60px spacer --></div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecondMortgageOriginationDate, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SecondMortgageOriginationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecondMortgageOriginationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstMortgagePayment, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FirstMortgagePayment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstMortgagePayment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label style="color: #f00" class="col-sm-4 control-label"><strong>Payment Includes</strong></label>
        </div>


        <div class="row">
            <div class="col-sm-12" style="">
                <div class=" col-md-2 col-sm-offset-1 col-md-offset-4">

                    <div class="form-group">
                        @Html.LabelFor(model => model.PymtIncludesMI, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-3" })
                        <div class="col-sm-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.PymtIncludesMI)
                                @Html.ValidationMessageFor(model => model.PymtIncludesMI, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PymtIncludesPropTaxes, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-3" })
                        <div class="col-sm-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.PymtIncludesPropTaxes)
                                @Html.ValidationMessageFor(model => model.PymtIncludesPropTaxes, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HoaDuesFees, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-3" })
                        <div class="col-sm-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.HoaDuesFees)
                                @Html.ValidationMessageFor(model => model.HoaDuesFees, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-md-3 col-sm-offset-1 col-md-offset-0">

                    <div class="form-group">
                        @Html.LabelFor(model => model.AnnualHomeownersInsur, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-3" })
                        <div class="col-sm-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.AnnualHomeownersInsur)
                                @Html.ValidationMessageFor(model => model.AnnualHomeownersInsur, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PymtIncludesMone, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-3" })
                        <div class="col-sm-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.PymtIncludesMone)
                                @Html.ValidationMessageFor(model => model.PymtIncludesMone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnnualPropertyTaxes, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AnnualPropertyTaxes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnnualPropertyTaxes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnnualHomeownersInsur, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AnnualHomeownersInsur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnnualHomeownersInsur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnnualHomeownersAssocDues, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AnnualHomeownersAssocDues, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnnualHomeownersAssocDues, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-4 col-sm-8">
                <div class="col-sm-6">
                    <button type="button" class="btn btn-default btn-lg" onclick="Back4Click()"><i class=" fa fa-angle-double-left"></i> BACK</button>
                    <button type="button" class="btn btn-primary btn-lg" onclick="App4Click()">Next <i class="fa fa-angle-double-right"></i></button>
                </div>
            </div>
        </div>
    </article>
    
    <article id="app5" style="display:none">
        <h2 class="subtitle">For Consumers by Consumers</h2>

        <div class="progress">
            <div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="99" aria-valuemin="0" aria-valuemax="100" style="width: 99%"></div>
        </div>

        <span class="apply_percent_info pull-left">Progress</span>
        <span class="apply_percent_info pull-right">99%</span>

        <div class="spacer"><!-- 60px spacer --></div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-sm-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <div class="col-sm-6">
                    @*Html.ActionLink("See Morgrage Options", "Create", "Application4", null, new { @class = "btn btn-lg btn-primary pull-right " })*@
                    <button type="button" class="btn btn-default btn-lg" onclick="Back5Click()"><i class=" fa fa-angle-double-left"></i> BACK</button>
                    <input type="submit" value="Run Morgrage Options" class="btn btn-lg btn-primary" />
                </div>
            </div>
        </div>
    </article>
}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ccs.js"></script>
}
